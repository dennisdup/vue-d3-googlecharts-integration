{"remainingRequest":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/thread-loader/dist/cjs.js!/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/babel-loader/lib/index.js!/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/cache-loader/dist/cjs.js??ref--0-0!/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/lampp/htdocs/ac_frontend_app/public/development/src/views/process-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/src/views/process-list.vue","mtime":1557512431080},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\nimport * as d3 from \"d3\";\nimport * as subProcedures from \"./expand-tree.js\";\nexport default {\n  props: ['treenodes', 'selectident'],\n  data: function data() {\n    return {\n      treedata: []\n    };\n  },\n  methods: {\n    loadTree: function loadTree() {\n      var $this = this;\n\n      if ($this.selectident == 'tree-container') {\n        $this.treedata = subProcedures.flatToHierarchy($this.subTreeChildren($this.treenodes));\n        subProcedures.expandTree(d3, $this.treedata, $this.selectident, $this.updateSub);\n      } else {\n        $this.treedata = subProcedures.flatToHierarchy($this.formTreeChildren($this.treenodes));\n        subProcedures.expandTree(d3, $this.treedata, $this.selectident, $this.updateSub);\n      }\n    },\n    updateSub: function updateSub(step) {\n      var $this = this;\n\n      if ($this.selectident == 'tree-container') {\n        $this.$store.dispatch('updateSteps', step);\n      }\n    },\n    subTreeChildren: function subTreeChildren(steps) {\n      var all = [];\n      var unfilteredarr = steps;\n      unfilteredarr.forEach(function (item, index) {\n        // prepare tree to assign parent\n        var parentid = 0;\n\n        if (index > 0) {\n          parentid = unfilteredarr[index - 1]._id;\n        }\n\n        var childinfo = {\n          nodeName: item.name,\n          name: item.name,\n          _id: item._id,\n          parentid: parentid,\n          forms: item.forms,\n          description: item.description\n        };\n        all.push(childinfo);\n      });\n      return all;\n    },\n    formTreeChildren: function formTreeChildren(form) {\n      var all = [];\n      var unfilteredarr = form;\n      unfilteredarr.forEach(function (item, index) {\n        // prepare tree to assign parent\n        var parentid = 0;\n\n        if (index > 0) {\n          parentid = unfilteredarr[index - 1]._id;\n        }\n\n        var childinfo = {\n          nodeName: item.name,\n          name: item.name,\n          _id: item._id,\n          parentid: parentid,\n          all: item\n        };\n        all.push(childinfo);\n      });\n      return all;\n    }\n  },\n  mounted: function mounted() {\n    this.loadTree();\n  },\n  components: {},\n  updated: function updated() {}\n};",{"version":3,"sources":["process-list.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div id=\"list-container center-block\">\n        <div v-bind:id=\"selectident\"></div>\n    </div>\n</template>\n\n<script>  \nimport * as d3 from \"d3\";\nimport * as subProcedures from './expand-tree.js';\n\nexport default {\n    props : ['treenodes','selectident'],\n    data() {\n        return {\n            treedata : [],\n        }\n    },\n    methods:{\n        loadTree(){\n            let $this = this;   \n            if($this.selectident == 'tree-container'){\n                $this.treedata = subProcedures.flatToHierarchy( $this.subTreeChildren($this.treenodes) );\n                subProcedures.expandTree(d3,$this.treedata,$this.selectident,$this.updateSub);               \n            }else{\n                $this.treedata = subProcedures.flatToHierarchy( $this.formTreeChildren($this.treenodes) );\n                subProcedures.expandTree(d3,$this.treedata,$this.selectident,$this.updateSub);               \n            }            \n        },\n        updateSub(step){\n            let $this = this;  \n            if($this.selectident == 'tree-container'){\n                $this.$store.dispatch('updateSteps',step);\n            }\n        },\n        subTreeChildren(steps){\n            let all = [];  \n            let unfilteredarr =  steps;\n            unfilteredarr.forEach(function(item,index) { // prepare tree to assign parent\n                let parentid = 0;\n                if(index>0){\n                    parentid = unfilteredarr[index-1]._id\n                }\n                let childinfo = { nodeName:item.name,name:item.name,_id:item._id,parentid:parentid,forms:item.forms,description:item.description };\n                all.push(childinfo);                    \n            });\n            return all;\n        },\n        formTreeChildren(form){\n            let all = [];  \n            let unfilteredarr =  form;\n            unfilteredarr.forEach(function(item,index) { // prepare tree to assign parent\n                let parentid = 0;\n                if(index>0){\n                    parentid = unfilteredarr[index-1]._id\n                }\n                let childinfo = { nodeName:item.name,name:item.name,_id:item._id,parentid:parentid,all:item };\n                all.push(childinfo);                    \n            });\n            return all;\n        },\n    \n    },\n    mounted(){\n        this.loadTree();\n    },\n    components:{\n        \n    },\n    updated(){\n        \n    },\n}     \n</script>\n\n<style>\n\n</style>\n"],"sourceRoot":"src/views"}]}