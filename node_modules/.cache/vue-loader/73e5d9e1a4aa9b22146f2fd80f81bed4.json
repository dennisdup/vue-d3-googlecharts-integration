{"remainingRequest":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/lampp/htdocs/ac_frontend_app/public/development/src/views/Grid.vue?vue&type=template&id=9b05a900&scoped=true&","dependencies":[{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/src/views/Grid.vue","mtime":1557489609729},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div>\n<table class=\"table table-hover alpha-table\">\n  <thead>\n    <tr>\n      <th v-if=\"customSelection\"><div @click=\"addCustomSelection('all')\">Select All</div></th>\n      <th v-for=\"key in columns\">\n        <div v-if=\"!key.labelAction\" @click=\"sortBy(key.path)\">\n          <span v-if=\"!key.help\">{{ key.title }}</span>\n          <span v-if=\"key.help\" v-help=\"key.help\">{{ key.title }}</span>\n          </span>\n        </div>\n        <div class=\"action-button\" v-else @click=\"cellEvent(key, key.labelAction, limitedData)\">\n          <span v-if=\"!key.help\">{{ key.title }}</span>\n          <span v-if=\"key.help\" v-help=\"key.help\">{{ key.title }}</span>\n        </div>\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr v-for=\"(entry, ind) in limitedData\" v-if=\"hasValues(entry)\" @click=\"rowEvent(entry, ind)\" class=\"grid-row\" :class=\"{'highlighted': rowHighlighted === ind}\">\n      <td v-if=\"customSelection\" >\n        <div><input @click.stop=\"addCustomSelection(entry)\" type=\"checkbox\" style=\"font-size:20px;\" :checked=\"selectedTasks.includes(entry._id)\"></div>\n      </td>\n      <td v-for=\"key in columns\" :class=\"[key.addClass]\" class=\"grid-cell\">\n        <template v-if=\"key.title === 'Action' || key.title === 'Actions' || key.title === '操作'\">\n          <p v-if=\"key.title === 'Actions' || key.title === '操作'\" class=\"action-button\"  style=\"margin-right: 5px;\" v-for=\"action in key.actions\" @click.stop=\"cellEvent(entry._id || entry, action.name)\" v-show=\"!action.show || entry[action.show]\" :class=\"action.class\" v-text=\"entry.ratification && entry.ratification.status ? 'unratify' : action.name\"></p>\n\n          <p class=\"action-button text-danger\" v-if=\"key.actions.indexOf('remove') >= 0\" @click.stop=\"cellEvent(entry._id || ind, 'remove')\">Delete</p>\n          <p class=\"action-button text-primary\" v-if=\"key.actions.indexOf('view') >= 0\" @click.stop=\"cellEvent(entry._id || ind, 'view')\">View</p>\n          <p class=\"action-button text-success\" v-if=\"key.actions.indexOf('ratify') >= 0\" @click.stop=\"cellEvent(entry._id, 'ratify')\" v-text=\"entry.ratification && entry.ratification.status ? 'Unratify' : 'Ratify'\"></p>\n          <a v-if=\"key.actions.indexOf('download') >= 0\" v-bind:href=\"entry.link\" download>Download</a>\n          <p class=\"action-button text-success\" v-if=\"key.actions.indexOf('send') >= 0\" @click.stop=\"cellEvent(entry._id, 'send')\">Send</p>\n        </template>\n        <template v-else>\n          <div v-if=\"key.type === 'html-content'\">\n            <p v-html=\"entry[key.path]\"></p>\n          </div>\n          <div v-else-if=\"key.type === 'dropdown'\">\n            <div class=\"dropdown company-dropdown select-button\" v-if=\"checkDisabled(entry, key.disabled)\">\n              <button class=\"dropdown-toggle form-control input-sm user-input dropdown-button\" type=\"button\" data-toggle=\"dropdown\">\n              <p class=\"dropdowns\" v-text=\"cellText(entry, key.path) || '-'\"></p></button>\n              <ul class=\"dropdown-menu\">\n              <li><a style=\"cursor: pointer;\" v-for=\"li in key.list\" v-on:click=\"selectDropdownItem(li, entry, key)\">{{li}}</a></li>\n              </ul>\n            </div>\n            <span v-else class=\"disabled\">Disabled</span>\n          </div>\n          <div v-else-if=\"key.type === 'other'\" style=\"position: relative;\">\n            <span class=\"glyphicon glyphicon-option-horizontal other-options\" @click.stop=\"openOptions(ind)\"></span>\n\n            <div class=\"other-options-dropdown\" v-if=\"showOptions === ind\" v-click-outside=\"clickOutside\">\n              <ul class=\"alpha-ul\">\n                <li v-for=\"li in key.actions\"><div v-if=\"checkDisabled(entry, li)\" :class=\"li.class || ''\" @click.stop=\"cellEvent(li, entry, key)\">{{li.name}}</div></li>\n              </ul>\n            </div>\n          </div>\n          <div v-else-if=\"key.type === 'order'\" class=\"grid-order\">\n            <span class=\"glyphicon glyphicon-triangle-top\" @click.stop=\"cellEvent(entry, key.action, 'up')\"></span>\n            <span class=\"glyphicon glyphicon-triangle-bottom\" @click.stop=\"cellEvent(entry, key.action, 'down')\"></span>\n          </div>\n\n          <p v-else-if=\"key.type === 'link' && entry[key.path]\" @click.stop=\"cellEvent(entry, 'download')\" style=\"font-size: 15px; position: relative;\">\n            <span v-if=\"popUp.text && popUp.ind === ind\" class=\"grid-pop-up\" v-text=\"popUp.text\"></span>\n            <span v-if=\"!entry.files\">\n              <a @mouseover=\"showFileName(entry, ind)\" @mouseleave=\"popUp.text = undefined; popUp.ind = undefined;\" target=\"_blank\" :href=\"cellText(entry, key.path)\" download><span class=\"glyphicon glyphicon-file\"></span></a>\n            </span>\n            <span v-if=\"entry.files\">\n              <a v-for=\"file in entry.files\" v-if=\"file.file\" @mouseover=\"showFileName(file, ind, true)\" @mouseleave=\"popUp.text = undefined; popUp.ind = undefined;\" target=\"_blank\" :href=\"file.file\" download><span class=\"glyphicon glyphicon-file\"></span></a>\n            </span>\n          </p>\n\n          <p v-else-if=\"key.bool\" @click.stop=\"cellEvent(entry, key.action, key.path)\" style=\"font-size: 15px;\"><span v-if=\"checkBool(entry, key.path) && !checkBool(entry, key.show, true)\" class=\"glyphicon glyphicon-ok text-success\"></span><span v-if=\"!checkBool(entry, key.path) && !checkBool(entry, key.show, true)\" class=\"glyphicon glyphicon-minus\" style=\"color: lightgrey\"></span></p>\n          <p v-else-if=\"key.class\" :class=\"key.class ? cellClass(entry, key.class) : ''\" @click.stop=\"cellEvent({path: key.path, ind}, key.action)\">{{cellLength(cellText(entry, key.path))}}</p>\n          <p v-else-if=\"key.action\" class=\"action-button text-success\" @click.stop=\"cellEvent(entry, key.action)\" >{{cellLength(cellText(entry, key.path))}}</p>\n          <p v-else :class=\"key.customClass ? cellClass(entry, key.customClass) : ''\">{{cellLength(cellText(entry, key.path, key.field))}}</p>\n        </template>\n      </td>\n    </tr>\n    <tr v-if=\"isLoading\">\n      <td :colspan=\"columns.length\" class=\"text-center noData\">\n        <i class=\"fa fa-spinner fa-spin\"></i>\n      </td>\n    </tr>\n    <tr v-if=\"!isLoading && !data.length\">\n      <td :colspan=\"columns.length\" class=\"text-center noData\">\n        <div v-html=\"emptyTableText\"></div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  <div class=\"row\" v-if=\"noPages.length > 1\">\n    <div class=\"text-center\">\n      <ul class=\"pagination\">\n        <li :class=\"{disabled: (currentPage === 0)}\"><a href=\"#\" @click=\"previous\">Previous</a></li>\n        <li><a href=\"#\" @click=\"firstPage\">First</a></li>\n        <template>\n          <li v-for=\"(page, ind) in noPages\" :class=\"{active: page === currentPage}\">\n            <a :class=\"{'last-pagination-achor': ind === noPages.length - 1}\" href=\"#\" @click='(e) => {goToPage(page, e)}'>{{page + 1}}</a>\n          </li>\n        </template>\n        <li :class=\"{disabled: (currentPage + 1 === noPages.length)}\"><a href=\"#\" @click=\"next\">Next</a></li>\n      </ul>\n    </div>\n  </div>\n</div>\n",null]}