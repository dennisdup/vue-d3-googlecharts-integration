{"remainingRequest":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/lampp/htdocs/ac_frontend_app/public/development/src/views/process-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/src/views/process-list.vue","mtime":1557406955219},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n  \nimport d3 from 'd3';\nimport * as subProcedures from './expand-tree.js';\nexport default {\n    props : ['stepsarr','selectident'],\n    data() {\n        return {\n            \n        }\n    },\n    methods:{\n         loadTree(){             \n             console.log(d3);\n            //console.log('stepsarr ',this.stepsarr);\n            // const $this = this;\n            // console.log('select opt',$this.stepsarr);\n            // //console.log('test data',this.$parent.template.steps);\n            // //console.log('test data hierachy', flatToHierarchy(this.$parent.template.steps));\n            // let all = [];  \n            // let unfilteredarr =  $this.stepsarr;\n            // unfilteredarr.forEach(function(item,index) { // prepare tree to assign parent\n            //     let parentid = 0;\n            //     if(index>0){\n            //         parentid = unfilteredarr[index-1]._id\n            //     }\n            //     let childinfo = { nodeName:item.name,name:item.name,_id:item._id,parentid:parentid };\n            //     all.push(childinfo);                    \n            // });\n            // let treedata  = subProcedures.flatToHierarchy($this.stepsarr,all);\n            // subProcedures.expandTree(d3,treedata,$this.selectident);               \n        },\n    \n    },\n    mounted(){\n        this.loadTree();\n    },\n    components:{\n        \n    },\n    updated(){\n        console.log('reupdated');\n        this.subProcedures.reset();\n        this.loadTree();\n    },\n\n}     \n\n",{"version":3,"sources":["process-list.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"process-list.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div id=\"list-container\">\n        <div v-bind:id=\"selectident\"></div>\n    </div>\n</template>\n\n<script>  \nimport d3 from 'd3';\nimport * as subProcedures from './expand-tree.js';\nexport default {\n    props : ['stepsarr','selectident'],\n    data() {\n        return {\n            \n        }\n    },\n    methods:{\n         loadTree(){             \n             console.log(d3);\n            //console.log('stepsarr ',this.stepsarr);\n            // const $this = this;\n            // console.log('select opt',$this.stepsarr);\n            // //console.log('test data',this.$parent.template.steps);\n            // //console.log('test data hierachy', flatToHierarchy(this.$parent.template.steps));\n            // let all = [];  \n            // let unfilteredarr =  $this.stepsarr;\n            // unfilteredarr.forEach(function(item,index) { // prepare tree to assign parent\n            //     let parentid = 0;\n            //     if(index>0){\n            //         parentid = unfilteredarr[index-1]._id\n            //     }\n            //     let childinfo = { nodeName:item.name,name:item.name,_id:item._id,parentid:parentid };\n            //     all.push(childinfo);                    \n            // });\n            // let treedata  = subProcedures.flatToHierarchy($this.stepsarr,all);\n            // subProcedures.expandTree(d3,treedata,$this.selectident);               \n        },\n    \n    },\n    mounted(){\n        this.loadTree();\n    },\n    components:{\n        \n    },\n    updated(){\n        console.log('reupdated');\n        this.subProcedures.reset();\n        this.loadTree();\n    },\n\n}     \n\n</script>\n\n<style>\n\n</style>\n"]}]}