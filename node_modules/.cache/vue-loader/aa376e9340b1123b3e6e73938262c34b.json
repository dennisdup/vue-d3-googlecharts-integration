{"remainingRequest":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/lampp/htdocs/ac_frontend_app/public/development/src/views/Grid.vue?vue&type=style&index=0&id=9b05a900&scoped=true&lang=css&","dependencies":[{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/src/views/Grid.vue","mtime":1558609415281},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* .alpha-table {\n  margin-top: 10px;\n}\n.grid-row {\n  cursor: pointer;\n  background-color: #f9f9f9;\n  font-size: 14px;\n}\n.grid-row:hover .grid-order {\n  display: flex;\n}\n.grid-cell {\n  padding: 7px;\n  position: relative !important;\n}\n.grid-cell > p {\n  margin: 0;\n}\nth {\n  cursor: pointer;\n  border: none !important;\n  font-size: 12px;\n  font-weight: 500;\n  padding: 3px !important;\n}\nth.act {\n  color: grey;\n}\nth.act .arrow {\n  opacity: 1;\n}\nth > div {\n  padding: 3px;\n}\n.arrow {\n  display: inline-block;\n  vertical-align: middle;\n  width: 0;\n  height: 0;\n  margin-left: 5px;\n  opacity: 0.66;\n}\n.arrow.asc {\n  border-left: 4px solid transparent;\n  border-right: 4px solid transparent;\n  border-bottom: 4px solid #fff;\n}\n.arrow.dsc {\n  border-left: 4px solid transparent;\n  border-right: 4px solid transparent;\n  border-top: 4px solid #fff;\n}\n.action-button {\n  cursor: pointer;\n  display: inline-block;\n}\n.action-button:hover {\n  text-decoration: underline;\n}\n.highlighted {\n  background-color: #efefef !important;\n}\n.other-options {\n  font-size: 16px;\n}\n.other-options:hover {\n  color: #DAA520;\n}\n.other-options-dropdown {\n  position: absolute;\n  top: 20px;\n  left: -100px;\n  z-index: 9999;\n  background-color: #fff;\n}\n.other-options-dropdown ul {\n  padding: 5px;\n  box-shadow: 3px 3px 11px 1px #ccc;\n  min-width: 150px;\n}\n.other-options-dropdown ul li {\n  padding: 0px 5px;\n}\n.other-options-dropdown ul li:hover {\n  background-color: #efefef;\n}\n.grid-order {\n  display: none;\n  flex-direction: column;\n  max-height: 15px;\n  margin-top: -5px;\n  font-size: 16px;\n}\n.grid-order span {\n  max-width: 18px;\n}\n.grid-order span:first-child {\n  margin-bottom: -5px;\n}\n.grid-order span:hover {\n  color: #337ab7;\n}\n.disabled {\n  color: #aba8a8;\n}\n.grid-pop-up {\n  position: absolute;\n  top: -30px;\n  left: -40px;\n  border-radius: 4px;\n  padding: 5px;\n  border: 1px solid lightgray;\n  background-color: #efefef;\n  width: auto;\n  white-space: nowrap;\n} */\n",{"version":3,"sources":["Grid.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Grid.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"table-responsive\">\n  <table class=\"table table-hover alpha-table\">\n    <thead>\n      <tr>\n        <th v-if=\"customSelection\"><div @click=\"addCustomSelection('all')\">Select All</div></th>\n        <th v-for=\"key in columns\">\n          <div v-if=\"!key.labelAction\" @click=\"sortBy(key.path)\">\n            <span v-if=\"!key.help\">{{ key.title }}</span>\n            <span v-if=\"key.help\" v-help=\"key.help\">{{ key.title }}</span>\n            </span>\n          </div>\n          <div class=\"action-button\" v-else @click=\"cellEvent(key, key.labelAction, limitedData)\">\n            <span v-if=\"!key.help\">{{ key.title }}</span>\n            <span v-if=\"key.help\" v-help=\"key.help\">{{ key.title }}</span>\n          </div>\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr v-for=\"(entry, ind) in limitedData\" v-if=\"hasValues(entry)\" @click=\"rowEvent(entry, ind)\" class=\"grid-row\" :class=\"{'highlighted': rowHighlighted === ind}\">\n        <td v-if=\"customSelection\" >\n          <div><input @click.stop=\"addCustomSelection(entry)\" type=\"checkbox\" style=\"font-size:20px;\" :checked=\"selectedTasks.includes(entry._id)\"></div>\n        </td>\n        <td v-for=\"key in columns\" :class=\"[key.addClass]\" class=\"grid-cell\">\n          <template v-if=\"key.title === 'Action' || key.title === 'Actions' || key.title === '操作'\">\n            <p v-if=\"key.title === 'Actions' || key.title === '操作'\" class=\"action-button\"  style=\"margin-right: 5px;\" v-for=\"action in key.actions\" @click.stop=\"cellEvent(entry._id || entry, action.name)\" v-show=\"!action.show || entry[action.show]\" :class=\"action.class\" v-text=\"entry.ratification && entry.ratification.status ? 'unratify' : action.name\"></p>\n\n            <p class=\"action-button text-danger\" v-if=\"key.actions.indexOf('remove') >= 0\" @click.stop=\"cellEvent(entry._id || ind, 'remove')\">Delete</p>\n            <p class=\"action-button text-primary\" v-if=\"key.actions.indexOf('view') >= 0\" @click.stop=\"cellEvent(entry._id || ind, 'view')\">View</p>\n            <p class=\"action-button text-success\" v-if=\"key.actions.indexOf('ratify') >= 0\" @click.stop=\"cellEvent(entry._id, 'ratify')\" v-text=\"entry.ratification && entry.ratification.status ? 'Unratify' : 'Ratify'\"></p>\n            <a v-if=\"key.actions.indexOf('download') >= 0\" v-bind:href=\"entry.link\" download>Download</a>\n            <p class=\"action-button text-success\" v-if=\"key.actions.indexOf('send') >= 0\" @click.stop=\"cellEvent(entry._id, 'send')\">Send</p>\n          </template>\n          <template v-else>\n            <div v-if=\"key.type === 'html-content'\">\n              <p v-html=\"entry[key.path]\"></p>\n            </div>\n            <div v-else-if=\"key.type === 'dropdown'\">\n              <div class=\"dropdown company-dropdown select-button\" v-if=\"checkDisabled(entry, key.disabled)\">\n                <button class=\"dropdown-toggle form-control input-sm user-input dropdown-button\" type=\"button\" data-toggle=\"dropdown\">\n                <p class=\"dropdowns\" v-text=\"cellText(entry, key.path) || '-'\"></p></button>\n                <ul class=\"dropdown-menu\">\n                <li><a style=\"cursor: pointer;\" v-for=\"li in key.list\" v-on:click=\"selectDropdownItem(li, entry, key)\">{{li}}</a></li>\n                </ul>\n              </div>\n              <span v-else class=\"disabled\">Disabled</span>\n            </div>\n            <div v-else-if=\"key.type === 'other'\" style=\"position: relative;\">\n              <span class=\"glyphicon glyphicon-option-horizontal other-options\" @click.stop=\"openOptions(ind)\"></span>\n\n              <div class=\"other-options-dropdown\" v-if=\"showOptions === ind\" v-click-outside=\"clickOutside\">\n                <ul class=\"alpha-ul\">\n                  <li v-for=\"li in key.actions\"><div v-if=\"checkDisabled(entry, li)\" :class=\"li.class || ''\" @click.stop=\"cellEvent(li, entry, key)\">{{li.name}}</div></li>\n                </ul>\n              </div>\n            </div>\n            <div v-else-if=\"key.type === 'order'\" class=\"grid-order\">\n              <span class=\"glyphicon glyphicon-triangle-top\" @click.stop=\"cellEvent(entry, key.action, 'up')\"></span>\n              <span class=\"glyphicon glyphicon-triangle-bottom\" @click.stop=\"cellEvent(entry, key.action, 'down')\"></span>\n            </div>\n\n            <p v-else-if=\"key.type === 'link' && entry[key.path]\" @click.stop=\"cellEvent(entry, 'download')\" style=\"font-size: 15px; position: relative;\">\n              <span v-if=\"popUp.text && popUp.ind === ind\" class=\"grid-pop-up\" v-text=\"popUp.text\"></span>\n              <span v-if=\"!entry.files\">\n                <a @mouseover=\"showFileName(entry, ind)\" @mouseleave=\"popUp.text = undefined; popUp.ind = undefined;\" target=\"_blank\" :href=\"cellText(entry, key.path)\" download><span class=\"glyphicon glyphicon-file\"></span></a>\n              </span>\n              <span v-if=\"entry.files\">\n                <a v-for=\"file in entry.files\" v-if=\"file.file\" @mouseover=\"showFileName(file, ind, true)\" @mouseleave=\"popUp.text = undefined; popUp.ind = undefined;\" target=\"_blank\" :href=\"file.file\" download><span class=\"glyphicon glyphicon-file\"></span></a>\n              </span>\n            </p>\n\n            <p v-else-if=\"key.bool\" @click.stop=\"cellEvent(entry, key.action, key.path)\" style=\"font-size: 15px;\"><span v-if=\"checkBool(entry, key.path) && !checkBool(entry, key.show, true)\" class=\"glyphicon glyphicon-ok text-success\"></span><span v-if=\"!checkBool(entry, key.path) && !checkBool(entry, key.show, true)\" class=\"glyphicon glyphicon-minus\" style=\"color: lightgrey\"></span></p>\n            <p v-else-if=\"key.class\" :class=\"key.class ? cellClass(entry, key.class) : ''\" @click.stop=\"cellEvent({path: key.path, ind}, key.action)\">{{cellLength(cellText(entry, key.path))}}</p>\n            <p v-else-if=\"key.action\" class=\"action-button text-success\" @click.stop=\"cellEvent(entry, key.action)\" >{{cellLength(cellText(entry, key.path))}}</p>\n            <p v-else :class=\"key.customClass ? cellClass(entry, key.customClass) : ''\">{{cellLength(cellText(entry, key.path, key.field))}}</p>\n          </template>\n        </td>\n      </tr>\n      <tr v-if=\"isLoading\">\n        <td :colspan=\"columns.length\" class=\"text-center noData\">\n          <i class=\"fa fa-spinner fa-spin\"></i>\n        </td>\n      </tr>\n      <tr v-if=\"!isLoading && !data.length\">\n        <td :colspan=\"columns.length\" class=\"text-center noData\">\n          <div v-html=\"emptyTableText\"></div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n    <div class=\"row\" v-if=\"noPages.length > 1\">\n      <div class=\"text-center\">\n        <ul class=\"pagination\">\n          <li :class=\"{disabled: (currentPage === 0)}\"><a href=\"#\" @click=\"previous\">Previous</a></li>\n          <li><a href=\"#\" @click=\"firstPage\">First</a></li>\n          <template>\n            <li v-for=\"(page, ind) in noPages\" :class=\"{active: page === currentPage}\">\n              <a :class=\"{'last-pagination-achor': ind === noPages.length - 1}\" href=\"#\" @click='(e) => {goToPage(page, e)}'>{{page + 1}}</a>\n            </li>\n          </template>\n          <li :class=\"{disabled: (currentPage + 1 === noPages.length)}\"><a href=\"#\" @click=\"next\">Next</a></li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    props: {\n      data: Array, // Unfiltered table data\n      columns: Array, // List of columns ['title', 'description']\n      filterKey: String, // String to filter on ''\n      customEmptyTableText: '', // optional text override for empty table\n      rowsPerPage: Number, // Number of rows per page of results\n      isLoading: false,\n      customSelection: Boolean,\n      selectedTasks: Array,\n      highlightOnClick: Boolean,\n      returnDataOnPage: Boolean\n    },\n    data: function () {\n      var sortOrders = {}\n      this.columns.forEach(function (key) {\n        sortOrders[key.path] = 1\n      })\n      return {\n        sortKey: '', popUp: {text: undefined, ind: undefined},\n        showOptions: false,\n        sortOrders: sortOrders,\n        currentPage: 0,\n        rowHighlighted: undefined\n      }\n    },\n    watch: {\n      'filterKey': function (a, b) { // Reset to page 0 when search changes\n        this.currentPage = 0\n      },\n      'rowsPerPage': function (a, b) { // Reset to page 0 when items per page changes\n        this.currentPage = 0\n      },\n      'noPages': function (a) { // Reset to page 0 when items per page changes\n        if (this.currentPage > this.noPages[this.noPages.length - 1]) {\n          this.currentPage = this.noPages[this.noPages.length - 1];\n        }\n      }\n    },\n    computed: {\n      noPages: function () { // No. pages as an array. Used for rendering paginator\n        let pages = Math.ceil(this.filteredData.length / this.rowsPerPage);\n        pages = [...Array(pages).keys()];\n        pages = pages.filter(num => {\n          return num < this.currentPage + 10 && num > this.currentPage - 10;\n        }); \n\n        return pages;\n      },\n      emptyTableText: function () { // Default text shown when there's no data in the table\n        if (this.customEmptyTableText) {\n          return this.customEmptyTableText\n        } else {\n          return 'No data to show'\n        }\n      },\n      filteredData: function () { // Data filtered through the local search\n        var sortKey = this.sortKey\n        var filterKey = this.filterKey && this.filterKey.toLowerCase()\n        var order = this.sortOrders[sortKey] || 1\n        var data = this.data\n        if (filterKey) {\n          data = data.filter(function (row) {\n            return Object.keys(row).some(function (key) {\n              return String(row[key]).toLowerCase().indexOf(filterKey) > -1\n            })\n          })\n        }\n        if (sortKey) { // If sort specified, sort\n          if (sortKey.toLowerCase().includes('date')) {\n            let noDateArr = data.filter(d => !d[sortKey]);\n            data = data.slice().filter(d => d[sortKey]).sort(function (a, b) {\n              return (new Date(a[sortKey]) > new Date(b[sortKey]) ? 1 : -1) * order;\n            }).concat(noDateArr);\n          } else {\n            if (sortKey.includes('.')) {\n              sortKey = sortKey.split('.');\n              data = data.slice().sort(function (a, b) {\n                a = a[sortKey[0]] ? a[sortKey[0]][sortKey[1]] : 0;\n                b = b[sortKey[0]] ? b[sortKey[0]][sortKey[1]] : 0;\n                return (a === b ? 0 : a > b ? 1 : -1) * order\n              })\n            } else {\n              data = data.slice().sort(function (a, b) {\n                a = a[sortKey]\n                b = b[sortKey]\n                return (a === b ? 0 : a > b ? 1 : -1) * order\n              })\n            }\n          }\n        }\n        return data\n      },\n      limitedData: function () { // Data limited to a page\n        let limitedData = this.filteredData.slice(\n          this.currentPage * this.rowsPerPage,\n          this.rowsPerPage * (this.currentPage + 1)\n        );\n        if (this.returnDataOnPage) {\n          this.$emit('limitedData', limitedData);\n        }\n        return limitedData;\n      }\n    },\n    methods: {\n      sortBy: function (key) { // header row click handler. Sort by column\n        this.sortKey = key\n        this.sortOrders[key] = this.sortOrders[key] * -1\n      },\n      checkBool: function(entry, path, show) {\n        if (show) {\n          if (!entry[path]) return false;\n          return true;\n        } else {\n          return entry[path];\n        }\n      },\n      cellLength: function(val) {\n        if (!val) return '';\n        return val.length > 100 ? val.substring(0, 100) + ' ...' : val;\n      },\n      cellText: function(entry, path, field) {\n        if (path.includes('.')) {\n          if (!entry[path.split('.')[0]]) return '';\n          if (Object.prototype.toString.call(entry[path.split('.')[0]][path.split('.')[1]]) === '[object Array]') {\n            return entry[path.split('.')[0]][path.split('.')[1]].join(\", \");\n          }\n          return entry[path.split('.')[0]][path.split('.')[1]];\n        } else if (Object.prototype.toString.call( entry[path] ) === '[object Array]') {\n          if (field) {\n            return entry[path].map(e => e[field]).join(\", \")\n          }\n          if (!entry[path.split('.')[0]]) return '';\n          if (path.includes('.')) {\n            return entry[path.split('.')[0]][path.split('.')[1]].join(\", \");\n          } else {\n            return entry[path].join(\", \")\n          }\n        } else {\n          return entry[path];\n        }\n      },\n      rowEvent: function (entry, ind) { // Event broadcase from table with clicked element\n        if (this.highlightOnClick) {\n          this.rowHighlighted = ind;\n        }\n        this.$emit('clickRow', entry)\n      },\n      cellEvent: function (entry, action, path, event) { // Event broadcase from table with clicked element\n        if (!action) return;\n        this.showOptions = undefined;\n        this.$emit('clickCell', entry, action, path, event)\n      },\n      previous: function (e) { // Previous page click handler\n        e.preventDefault()\n        if (this.currentPage !== 0) {\n          --this.currentPage\n        }\n      },\n      next: function (e) { // Next page click handler\n        e.preventDefault()\n        if (this.currentPage + 1 !== this.noPages.length) {\n          ++this.currentPage\n        }\n      },\n      goToPage: function (page, e) { // Go to a specific page click handler\n        e.preventDefault();\n        this.rowHighlighted = undefined;\n        this.currentPage = page;\n      },\n      firstPage: function(e) {\n        e.preventDefault();\n        this.currentPage = 0;\n      },\n      selectDropdownItem: function(li, entry, key) {\n        this.cellEvent(entry, key.action, li)\n      },\n      cellClass: function(entry, path) {\n        if (path.includes('.')) {\n          if (!entry[path.split('.')[0]]) return '';\n          if (Object.prototype.toString.call(entry[path.split('.')[0]][path.split('.')[1]]) === '[object Array]') {\n            return entry[path.split('.')[0]][path.split('.')[1]].join(\", \");\n          }\n          return entry[path.split('.')[0]][path.split('.')[1]];\n        } else {\n          return entry[path];\n        }\n      },\n      openOptions: function(num) {\n        if (this.showOptions === num) {\n          return this.showOptions = undefined;\n        }\n        this.showOptions = num;\n      },\n      clickOutside: function() {\n        this.showOptions = false;\n      },\n      checkDisabled: function(entry, li) {\n        if (typeof li === 'string') {\n          return !entry[li];\n        } else {\n          if (li && entry.hasOwnProperty(li.disabled)) {\n            return false;\n          }\n          return true;\n        }\n      },\n      showFileName: function(entry, ind, arr) {\n        if (arr) {\n          this.popUp.ind = ind;\n          this.popUp.text = entry.name || parseName(entry.file); \n        } else {\n          this.popUp.ind = ind;\n          this.popUp.text = parseName(entry.file || entry.link || entry.image); \n        }\n\n        function parseName(link) {\n          if (link.includes('http')) {\n            return link.substring(link.lastIndexOf('/') + 1);\n          } else {\n            return link;\n          }\n        }\n      },\n      addCustomSelection: function(entry) {\n        if (entry === 'all') {\n          this.$emit('selection', this.limitedData.map(e => e._id));\n        } else {\n          this.$emit('selection', entry._id);\n        }\n      },\n      hasValues: function(entry) {\n        return Object.keys(entry).some(k => entry[k]);\n      }\n    }\n\n  }\n</script>\n\n<style scoped>\n  /* .alpha-table {\n    margin-top: 10px;\n  }\n  .grid-row {\n    cursor: pointer;\n    background-color: #f9f9f9;\n    font-size: 14px;\n  }\n  .grid-row:hover .grid-order {\n    display: flex;\n  }\n  .grid-cell {\n    padding: 7px;\n    position: relative !important;\n  }\n  .grid-cell > p {\n    margin: 0;\n  }\n  th {\n    cursor: pointer;\n    border: none !important;\n    font-size: 12px;\n    font-weight: 500;\n    padding: 3px !important;\n  }\n  th.act {\n    color: grey;\n  }\n  th.act .arrow {\n    opacity: 1;\n  }\n  th > div {\n    padding: 3px;\n  }\n  .arrow {\n    display: inline-block;\n    vertical-align: middle;\n    width: 0;\n    height: 0;\n    margin-left: 5px;\n    opacity: 0.66;\n  }\n  .arrow.asc {\n    border-left: 4px solid transparent;\n    border-right: 4px solid transparent;\n    border-bottom: 4px solid #fff;\n  }\n  .arrow.dsc {\n    border-left: 4px solid transparent;\n    border-right: 4px solid transparent;\n    border-top: 4px solid #fff;\n  }\n  .action-button {\n    cursor: pointer;\n    display: inline-block;\n  }\n  .action-button:hover {\n    text-decoration: underline;\n  }\n  .highlighted {\n    background-color: #efefef !important;\n  }\n  .other-options {\n    font-size: 16px;\n  }\n  .other-options:hover {\n    color: #DAA520;\n  }\n  .other-options-dropdown {\n    position: absolute;\n    top: 20px;\n    left: -100px;\n    z-index: 9999;\n    background-color: #fff;\n  }\n  .other-options-dropdown ul {\n    padding: 5px;\n    box-shadow: 3px 3px 11px 1px #ccc;\n    min-width: 150px;\n  }\n  .other-options-dropdown ul li {\n    padding: 0px 5px;\n  }\n  .other-options-dropdown ul li:hover {\n    background-color: #efefef;\n  }\n  .grid-order {\n    display: none;\n    flex-direction: column;\n    max-height: 15px;\n    margin-top: -5px;\n    font-size: 16px;\n  }\n  .grid-order span {\n    max-width: 18px;\n  }\n  .grid-order span:first-child {\n    margin-bottom: -5px;\n  }\n  .grid-order span:hover {\n    color: #337ab7;\n  }\n  .disabled {\n    color: #aba8a8;\n  }\n  .grid-pop-up {\n    position: absolute;\n    top: -30px;\n    left: -40px;\n    border-radius: 4px;\n    padding: 5px;\n    border: 1px solid lightgray;\n    background-color: #efefef;\n    width: auto;\n    white-space: nowrap;\n  } */\n</style>"]}]}