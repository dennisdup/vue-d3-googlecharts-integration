{"remainingRequest":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/lampp/htdocs/ac_frontend_app/public/development/src/views/record-links.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/src/views/record-links.vue","mtime":1557490188241},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#record-links .forms-window {\n  top: 20px;\n  left: 30px;\n  right: unset;\n}\n",{"version":3,"sources":["record-links.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmNA;AACA;AACA;AACA;AACA","file":"record-links.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div v-click-outside=\"clickOutsideLinks\" id=\"record-links\">\n    <div class=\"relative\">\n      <label for=\"heading\" class=\"userinfo-label\">Display Compliance Records <span class=\"action-link\" @click=\"showRecordsWindow = true;\">Add</span></label>\n      <grid v-if=\"step.recordLinks\" class=\"grid\"\n        :data=\"step.recordLinks\"\n        @clickCell=\"cellClick\"\n        :columns=\"headers1\"\n        :rowsPerPage=\"10\">\n      </grid>\n\n      <div class=\"forms-window\" v-if=\"showRecordsWindow\" >\n        <ul class=\"alpha-ul\">\n          <li v-for=\"record in recordTypes\" @click=\"addRecord(record.name)\"><span class=\"glyphicon glyphicon-option-vertical mr-5\"></span>{{record.readableName}}</li>\n        </ul>\n      </div>\n    </div>\n    <modal v-if=\"recordsModal\" :width=\"'1200px'\" :height=\"'500px'\" @close=\"recordsModal = false;\">\n      <h3 slot=\"header\">{{getReadableActiveType()}}</h3>\n      <div slot=\"body\" >\n        <div v-show=\"!records\" class=\"spinner\"><div class=\"bounce1\"></div><div class=\"bounce2\"></div><div class=\"bounce3\"></div></div>\n\n        <div v-if=\"records\" class=\"flex\">\n          <div class=\"dropdown company-dropdown select-button\" style=\"max-width: 250px;\">\n            <button class=\"dropdown-toggle form-control input-sm user-input dropdown-button\" type=\"button\" data-toggle=\"dropdown\">\n            <p class=\"dropdowns\" v-text=\"chosenCompany || '-'\"></p></button>\n            <ul class=\"dropdown-menu\">\n              <li v-for=\"company in companyNames\" @click=\"chosenCompany = company;\"><a style=\"cursor: pointer;\">{{company}}</a></li>\n            </ul>\n\n          </div>\n          <div>\n            <input type=\"text\" name=\"searchQuery\" class=\"form-control input-sm user-info-fields mt-10\" placeholder=\"SEARCH\" v-model=\"searchQuery\">\n          </div>\n        </div>\n\n        <grid v-if=\"records\" class=\"grid\"\n          :data=\"recordsFiltered\"\n          @clickCell=\"cellClick\"\n          :columns=\"headers\"\n          :rowsPerPage=\"10\">\n        </grid>\n      </div>\n      <div slot=\"footer\">\n        <button class=\"btn btn-sm btn-success\" @click=\"recordsModal = false;\">OK</button>\n      </div>\n    </modal>\n  </div>\n</template>\n<script>\nimport modal from './Modal.vue';\nimport { dataService } from './utils/dataService.js';\nimport grid from './utils/Grid.vue';\nexport default {\n  data() {\n    return {\n      records: undefined, chosenCompany: 'Select Company', searchQuery: '',\n      showRecordsWindow: false,\n      recordsModal: false,\n      recordTypes: [\n        {readableName: 'Constitutionals', name: 'constitutionals'},\n        {readableName: 'Resolutions', name: 'resolutions'},\n        {readableName: 'Agreements', name: 'agreements'},\n        {readableName: 'Business Plans', name: 'businessplans'},\n        {readableName: 'Companies Registry Forms', name: 'registryforms'},\n        {readableName: 'Registers', name: 'members-directors'},\n        {readableName: 'Policies & Procedures', name: 'policies-procedures'},\n        {readableName: 'Compliance Plans', name: 'compliance-plans'},\n        {readableName: 'Compliance Reviews', name: 'compliance-reviews'},\n        {readableName: 'Compliance Records', name: 'compliance-records'},\n        {readableName: 'SFC Correspondences', name: 'correspondences'},\n      ],\n      headers: [\n        {\n          title: 'Name',\n          path: 'name'\n        },{\n          title: 'Company Name',\n          path: 'companyname'\n        }, {\n          title: 'Date',\n          path: 'date'\n        },\n        {\n          title: 'Note',\n          path: 'note'\n        }, {\n          title: 'Image',\n          type: 'link',\n          path: 'image'\n        },\n        {\n          title: 'Added',\n          path: 'added',\n          bool: true\n        },\n        {title: 'Actions',actions: [{name: 'Add', class: 'text-success', show: 'showAdd'},{name: 'Remove', class: 'text-danger', show: 'showRemove'}]}\n      ],\n      headers1: [\n        {\n          title: 'Type',\n          path: 'readableType'\n        },{\n          title: 'Name',\n          path: 'name'\n        }, {\n          title: 'Date',\n          path: 'date'\n        }, {\n          title: 'Image',\n          type: 'link',\n          path: 'image'\n        },\n        {\n          title: 'Note',\n          path: 'note'\n        },\n        {title: 'Actions',actions: [{name: 'Remove', class: 'text-danger'}]}\n      ]\n    }\n  },\n  methods: {\n    addRecord, clickOutsideLinks, getReadableActiveType, cellClick,\n    'Add': addItem,\n    'Remove': removeItem,\n    'download': download\n  },\n  props: {\n    step: Object\n  },\n  computed: {\n    recordsFiltered: function() {\n      let r = this.records;\n      if (this.searchQuery) {\n        r = r.filter(r => r.name.toLowerCase().includes(this.searchQuery) || r.companyname.toLowerCase().includes(this.searchQuery));\n      }\n      if (this.chosenCompany && this.chosenCompany !== 'Select Company') {\n        r = r.filter(r => r.companyname === this.chosenCompany);\n      }\n\n      return r;\n    }\n  },\n  components: {\n    modal, grid\n  }\n}\n\nfunction download() {\n  return;\n}\n\nfunction removeItem(id) {\n  let self = this;\n  self.step.recordLinks.splice(self.step.recordLinks.map(s => s._id).indexOf(id), 1);\n  let itemToAdd = self.records.find(r => r._id === id);\n  itemToAdd.added = !itemToAdd.added;\n  itemToAdd.showAdd = !itemToAdd.added;\n  itemToAdd.showRemove = itemToAdd.added;\n}\nfunction cellClick(id, action) {\n  if (!id) return;\n  this[action](id);\n}\n\nfunction addItem(id) {\n  let itemToAdd = this.records.find(r => r._id === id);\n  itemToAdd.added = !itemToAdd.added;\n  itemToAdd.showAdd = !itemToAdd.added;\n  itemToAdd.showRemove = itemToAdd.added;\n  let i = {'type': this.activeType, 'readableType': this.getReadableActiveType(this.activeType), 'name': itemToAdd.name, '_id': itemToAdd._id, 'date': itemToAdd.date, note: itemToAdd.note, 'image': itemToAdd.image};\n  if (this.step.hasOwnProperty('recordLinks')) {\n    this.step.recordLinks.push(i);\n  } else {\n    this.$set(this.step, 'recordLinks', [i]);\n  }\n}\n\nfunction getReadableActiveType() {\n  return this.recordTypes.find(r => r.name === this.activeType).readableName;\n}\n\nfunction clickOutsideLinks() {\n  this.$nextTick(() => {\n    this.showRecordsWindow = false;\n  });\n}\n\nfunction addRecord(type) {\n  this.activeType = type;\n  this.records = undefined;\n  this.recordsModal = true;\n  this.showRecordsWindow = false;\n  if (!this.step.recordLinks) this.$set(this.step, 'recordLinks', []);\n  this.$http.get(type).then(resp => {\n    resp.body.content = resp.body.content.filter(r => r.company);\n    resp.body.content.forEach(r => {\n      r.added = this.step.recordLinks.map(l => l._id).includes(r._id);\n      r.companyname = r.company.name;\n      r.showAdd = !r.added;\n      r.showRemove = r.added;\n    });\n    this.records = resp.body.content;\n    this.companyNames = this.records.map(r => r.companyname).filter((c, ind, arr) => arr.indexOf(c) === ind).sort((a, b) => a.localeCompare(b));\n  }).catch(err => {\n    dataService.$emit('msg', `Error loading ${this.getReadableActiveType(type)}`);\n  });\n}\n\n</script>\n<style type=\"text/css\">\n  #record-links .forms-window {\n    top: 20px;\n    left: 30px;\n    right: unset;\n  }\n</style>"]}]}