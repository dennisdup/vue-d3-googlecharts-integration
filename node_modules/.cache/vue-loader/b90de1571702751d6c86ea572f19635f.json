{"remainingRequest":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/lampp/htdocs/ac_frontend_app/public/development/src/views/form-field.vue?vue&type=script&lang=js&","dependencies":[{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/src/views/form-field.vue","mtime":1557511758514},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/ac_frontend_app/public/development/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport FileUpload from 'vue-upload-component';\nimport { dataService } from './dataService.js';\nimport alphaArea from './alpha-area.vue';\nimport modal from './Modal.vue';\n\nexport default {\n  data() {\n    return {\n      downloadModal: false,\n      toNow: this.form.value.to && this.form.value.to === 'Now' ? true : false,\n      loading: false,\n      showInfoText: false,\n      licenses: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\n      events: {\n        add\n      }\n    }\n  },\n  methods: {\n    downloadURI, getFileName, attachDatepicker, attachCompanies, attachLicenses\n  },\n  props: {\n    form: Object,\n    companies: Array,\n    index: Number\n  },\n  watch: {\n    'companies': function(nVal) {\n      if (nVal && this.form.type === 'companies') {\n        this.attachCompanies(nVal, `.field-${this.index}-companies`, this.form.value);\n      }\n    },\n    'toNow': function(nVal) {\n      if (nVal && nVal !== 'initial') {\n        this.form.value.to = 'Now';\n      }\n    },\n    'form.value.to': function(nVal) {\n      if (nVal !== 'Now') this.toNow = false;\n    }\n  },\n  mounted() {\n    if (this.form.type === 'date') {\n      this.attachDatepicker(`.field-${this.index}-datepicker`);\n    }\n\n    if (this.form.type === 'date-range') {\n      if (!this.form.value || typeof this.form.value === 'string' || !this.form.value.from) {\n        this.form.value = {'from': '', 'to': ''};\n      }\n\n      this.attachDatepicker(`.field-from-${this.index}-datepicker`, 'from');\n      this.attachDatepicker(`.field-to-${this.index}-datepicker`, 'to');\n    }\n\n    if (this.form.type === 'companies') {\n      console.log('this fires');\n      if (!this.form.value || typeof this.form.value === 'string') {\n        this.form.value = [];\n      }\n      if (this.companies) {\n        console.log('this fires1');\n        this.attachCompanies(this.companies, `.field-${this.index}-companies`, this.form.value);\n      }\n    }\n\n    if (this.form.type === 'licenses') {\n      if (!this.form.value || typeof this.form.value === 'string') {\n        this.form.value = [];\n      }\n      this.attachLicenses(this.licenses.map(l => `Type ${l}`), `.field-${this.index}-licenses`, this.form.value);\n    }\n  },\n  components: {\n    FileUpload, modal, alphaArea\n  }\n}\nfunction attachCompanies(companies, sel, selected) {\n  let self = this;\n  this.$nextTick(() => {\n    if ($(sel).find('option').length < 1) {\n      companies.forEach(function(company) {\n        $(sel).append('<option value=\"'+company._id+'\">'+company.name+'</option>');\n      });\n    }\n    if (selected) $(sel).val(selected);\n    $(sel).selectpicker('refresh').on('change', (ev) => {\n      let companiesChosen = [];\n      $(ev.target).find(\"option:selected\").each(function(ind, i) {\n        companiesChosen.push($(i).val());\n      });\n      self.form.value = companiesChosen; \n    });\n  });\n}\n\nfunction attachLicenses(licenses, sel, selected) {\n  let self = this;\n  this.$nextTick(() => {\n    if ($(sel).find('option').length < 1) {\n      licenses.forEach(function(l) {\n        $(sel).append(`<option value=\"${l}\">${l}</option>`);\n      });\n    }\n    if (selected) $(sel).val(selected);\n    $(sel).selectpicker('refresh').on('change', (ev) => {\n      let licensesChosen = [];\n      $(ev.target).find(\"option:selected\").each(function(ind, i) {\n        licensesChosen.push($(i).val());\n      });\n      self.form.value = licensesChosen; \n    });\n  });\n}\n\nfunction attachDatepicker(el, type) {\n  let self = this;\n  self.$nextTick(() => {\n    $(el).datepicker({dateFormat: 'dd M yy', changeYear: true}).on('change', function (ev) {\n      let date = ev.target.value;\n      if (!type) {\n        self.form.value = date;\n      } else {\n        self.form.value[type] = date;\n      }\n    });\n  });\n}\n\nfunction getFileName(link) {\n  if (!link) {\n    return '';\n  } else if (link.includes('http')) {\n    return link.substring(link.lastIndexOf('/') + 1);\n  } else {\n    return link;\n  }\n}\n\nfunction downloadURI(uri) {\n  this.downloadName = this.getFileName(uri);\n  this.downloadModal = true;\n  if (!uri) return;\n  let link = document.createElement(\"a\");\n  link.href = uri;\n  link.download = this.getFileName(uri);\n  link.target = \"_blank\";\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n\nfunction add(file, component) {\n  let self = this;\n  self.form = new window.FormData();\n  for (var key in file.data) {\n    if (typeof file.data[key] != 'string') {\n      self.form.append(key, JSON.stringify(file.data[key]));\n    } else {\n      self.form.append(key, file.data[key]);\n    }\n  }\n  self.form.append('file', file.file);\n  self.$parent.loading = true;\n  self.$http.post('/subscriptions/upload-html', self.form).then(resp => {\n    self.$parent.form.value = resp.body;\n    self.$parent.loading = false;\n    self.$parent.$forceUpdate();\n  }).catch(err => {\n    self.$parent.loading = false;\n    self.$parent.$parent.msg = 'Error uploading file'\n  })\n}\n\n",{"version":3,"sources":["form-field.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6IA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"form-field.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div>\n      <div v-if=\"form.type === 'string'\">\n        <label class=\"userinfo-label space-between\" for=\"role\">\n          <span class=\"action-text\">{{form.name}}</span> \n          <div>\n            <span v-if=\"form.dueDate\">Due: {{form.dueDate}}</span> \n            <span v-if=\"form.help\" class=\"glyphicon glyphicon-info-sign relative\" @mouseover=\"showInfoText = true;\" @mouseleave=\"showInfoText = false;\"> <span class=\"help-text\"  v-if=\"showInfoText && form.help\">{{form.help}}</span></span>\n          </div>\n        </label>\n        <alpha-area :mainObj=\"form\" :field=\"'value'\"></alpha-area>\n      </div>\n\n      <div v-if=\"form.type === 'checkbox'\">\n        <label class=\"userinfo-label space-between\" style=\"width: 100%;\"> \n          <div class=\"checkbox-layout\">\n            <span class=\"action-text mr-10\">{{form.name}}</span> \n            \n          </div>\n          <div>\n            <span v-if=\"form.dueDate\">Due: {{form.dueDate}}</span> \n            <span v-if=\"form.help\" style=\"margin-right: 10px;\" class=\"glyphicon glyphicon-info-sign relative\" @mouseover=\"showInfoText = true;\" @mouseleave=\"showInfoText = false;\"> \n            <span class=\"help-text\" v-if=\"showInfoText && form.help\">{{form.help}}</span></span> \n            <input type=\"checkbox\" class=\"form-check-input\" v-model=\"form.value\"> \n          </div>\n        </label>\n      </div>\n\n      <div v-if=\"form.type === 'yes-no'\">\n        <label class=\"userinfo-label space-between\" style=\"width: 100%;\"> \n          <div class=\"checkbox-layout\">\n            <span class=\"action-text mr-10\">{{form.name}}</span> \n            <div class=\"radio-btn\">\n              <label><input type=\"radio\" value=\"yes\" v-model=\"form.value\"> Yes</label>\n              <label><input type=\"radio\" value=\"no\" v-model=\"form.value\"> No</label>\n              <label><input type=\"radio\" value=\"NA\" v-model=\"form.value\"> NA</label>\n            </div>\n          </div>\n\n          <div>\n            <span v-if=\"form.dueDate\">Due: {{form.dueDate}}</span> \n            <span v-if=\"form.help\" class=\"glyphicon glyphicon-info-sign relative\" @mouseover=\"showInfoText = true;\" @mouseleave=\"showInfoText = false;\"> \n            <span class=\"help-text\"  v-if=\"showInfoText && form.help\">{{form.help}}</span></span> \n          </div>\n\n\n        </label>\n          <div class=\"mt-10\">\n            \n          </div>\n      </div>\n\n      <div v-if=\"form.type === 'file'\">\n        <label class=\"userinfo-label space-between\" for=\"role\">\n          <span class=\"action-text\">{{form.name}}</span> \n          <div>\n            <span v-if=\"form.dueDate\">Due: {{form.dueDate}}</span> \n            <span v-if=\"form.help\" class=\"glyphicon glyphicon-info-sign relative\" @mouseover=\"showInfoText = true;\" @mouseleave=\"showInfoText = false;\"> <span class=\"help-text\" v-if=\"showInfoText && form.help\">{{form.help}}</span></span>\n          </div>\n        </label>\n        <div class=\"image-el\" >\n          <p>\n            <span :class=\"{'task-link': form.value}\" @click=\"downloadURI(form.value)\" v-text=\"getFileName(form.value)\"></span>\n          </p> \n          <div v-show=\"loading\" class=\"spinner\"><div class=\"bounce1\"></div><div class=\"bounce2\"></div><div class=\"bounce3\"></div></div>\n          <file-upload :events=\"events\" accept=\".xlsx,.xls,image/*,.doc, .docx,.ppt, .pptx,.txt,.pdf,.csv\" ></file-upload>\n        </div>\n      </div>\n \n      <div v-if=\"form.type === 'date'\" >\n        <label class=\"userinfo-label space-between\" for=\"role\">\n          <span class=\"action-text\">{{form.name}}</span> \n          <div>\n            <span v-if=\"form.dueDate\">Due: {{form.dueDate}}</span> \n            <span v-if=\"form.help\" @mouseover=\"showInfoText = true;\" @mouseleave=\"showInfoText = false;\" class=\"glyphicon glyphicon-info-sign relative\" > <span class=\"help-text\" v-if=\"showInfoText && form.help\">{{form.help}}</span></span>\n          </div>\n        </label>\n        <input class=\"user-info-fields form-control input-sm\" :class=\"`field-${index}-datepicker`\" v-model=\"form.value\">\n      </div>\n\n      <div v-if=\"form.type === 'companies'\" >\n        <label class=\"userinfo-label space-between\" for=\"role\">\n          <span class=\"action-text\">{{form.name}}</span> \n          <div>\n            <span v-if=\"form.dueDate\">Due: {{form.dueDate}}</span> \n            <span v-if=\"form.help\" @mouseover=\"showInfoText = true;\" @mouseleave=\"showInfoText = false;\" class=\"glyphicon glyphicon-info-sign relative\" > <span class=\"help-text\" v-if=\"showInfoText && form.help\">{{form.help}}</span></span>\n          </div>\n        </label>\n        \n\n        <div>\n          <select class=\"selectpicker select-button form-field-companies\" :class=\"`field-${index}-companies`\" multiple data-actions-box=\"true\" data-live-search=\"true\"></select>\n        </div>\n      </div>\n\n      <div v-if=\"form.type === 'licenses'\" >\n        <label class=\"userinfo-label space-between\" for=\"role\">\n          <span class=\"action-text\">{{form.name}}</span> \n          <div>\n            <span v-if=\"form.dueDate\">Due: {{form.dueDate}}</span> \n            <span v-if=\"form.help\" @mouseover=\"showInfoText = true;\" @mouseleave=\"showInfoText = false;\" class=\"glyphicon glyphicon-info-sign relative\" > <span class=\"help-text\" v-if=\"showInfoText && form.help\">{{form.help}}</span></span>\n          </div>\n        </label>\n        \n\n        <div>\n          <select class=\"selectpicker select-button form-field-licenses\" :class=\"`field-${index}-licenses`\" multiple></select>\n        </div>\n      </div>\n\n      <div v-if=\"form.type === 'date-range'\" >\n        <div class=\"date-range\">\n          <label>\n            <span class=\"action-text\">{{form.name}}</span> \n            <span v-if=\"form.dueDate\">Due: {{form.dueDate}}</span> \n            <div>\n              \n              <span v-if=\"form.help\" @mouseover=\"showInfoText = true;\" @mouseleave=\"showInfoText = false;\" class=\"glyphicon glyphicon-info-sign relative\" > <span class=\"help-text\" v-if=\"showInfoText && form.help\">{{form.help}}</span></span> From\n            </div>\n          </label>\n          <input class=\"user-info-fields form-control input-sm\" :class=\"`field-from-${index}-datepicker`\" v-model=\"form.value.from\">\n        </div>\n        <div class=\"date-range relative\">\n          <label>To </label>\n          <label class=\"to-now\">Now <input type=\"checkbox\" v-model=\"toNow\"></label>\n          <input class=\"user-info-fields form-control input-sm\" :class=\"`field-to-${index}-datepicker`\" v-model=\"form.value.to\">\n        </div>\n      </div>\n\n      <modal v-if=\"downloadModal\" :width=\"'600px'\" @close=\"downloadModal = false;\">\n        <h4 slot=\"header\"></h4>\n        <div slot=\"body\" >\n          <h4>Your download will finish in a moment, please check your downloads folder for a file named '{{downloadName}}'.</h4>\n        </div>\n        <div slot=\"footer\">\n          <button class=\"btn btn-default btn-sm\" @click=\"downloadModal = false;\">OK</button>\n        </div>\n      </modal>\n    </div>\n</template>\n<script>\nimport FileUpload from 'vue-upload-component';\nimport { dataService } from './dataService.js';\nimport alphaArea from './alpha-area.vue';\nimport modal from './Modal.vue';\n\nexport default {\n  data() {\n    return {\n      downloadModal: false,\n      toNow: this.form.value.to && this.form.value.to === 'Now' ? true : false,\n      loading: false,\n      showInfoText: false,\n      licenses: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\n      events: {\n        add\n      }\n    }\n  },\n  methods: {\n    downloadURI, getFileName, attachDatepicker, attachCompanies, attachLicenses\n  },\n  props: {\n    form: Object,\n    companies: Array,\n    index: Number\n  },\n  watch: {\n    'companies': function(nVal) {\n      if (nVal && this.form.type === 'companies') {\n        this.attachCompanies(nVal, `.field-${this.index}-companies`, this.form.value);\n      }\n    },\n    'toNow': function(nVal) {\n      if (nVal && nVal !== 'initial') {\n        this.form.value.to = 'Now';\n      }\n    },\n    'form.value.to': function(nVal) {\n      if (nVal !== 'Now') this.toNow = false;\n    }\n  },\n  mounted() {\n    if (this.form.type === 'date') {\n      this.attachDatepicker(`.field-${this.index}-datepicker`);\n    }\n\n    if (this.form.type === 'date-range') {\n      if (!this.form.value || typeof this.form.value === 'string' || !this.form.value.from) {\n        this.form.value = {'from': '', 'to': ''};\n      }\n\n      this.attachDatepicker(`.field-from-${this.index}-datepicker`, 'from');\n      this.attachDatepicker(`.field-to-${this.index}-datepicker`, 'to');\n    }\n\n    if (this.form.type === 'companies') {\n      console.log('this fires');\n      if (!this.form.value || typeof this.form.value === 'string') {\n        this.form.value = [];\n      }\n      if (this.companies) {\n        console.log('this fires1');\n        this.attachCompanies(this.companies, `.field-${this.index}-companies`, this.form.value);\n      }\n    }\n\n    if (this.form.type === 'licenses') {\n      if (!this.form.value || typeof this.form.value === 'string') {\n        this.form.value = [];\n      }\n      this.attachLicenses(this.licenses.map(l => `Type ${l}`), `.field-${this.index}-licenses`, this.form.value);\n    }\n  },\n  components: {\n    FileUpload, modal, alphaArea\n  }\n}\nfunction attachCompanies(companies, sel, selected) {\n  let self = this;\n  this.$nextTick(() => {\n    if ($(sel).find('option').length < 1) {\n      companies.forEach(function(company) {\n        $(sel).append('<option value=\"'+company._id+'\">'+company.name+'</option>');\n      });\n    }\n    if (selected) $(sel).val(selected);\n    $(sel).selectpicker('refresh').on('change', (ev) => {\n      let companiesChosen = [];\n      $(ev.target).find(\"option:selected\").each(function(ind, i) {\n        companiesChosen.push($(i).val());\n      });\n      self.form.value = companiesChosen; \n    });\n  });\n}\n\nfunction attachLicenses(licenses, sel, selected) {\n  let self = this;\n  this.$nextTick(() => {\n    if ($(sel).find('option').length < 1) {\n      licenses.forEach(function(l) {\n        $(sel).append(`<option value=\"${l}\">${l}</option>`);\n      });\n    }\n    if (selected) $(sel).val(selected);\n    $(sel).selectpicker('refresh').on('change', (ev) => {\n      let licensesChosen = [];\n      $(ev.target).find(\"option:selected\").each(function(ind, i) {\n        licensesChosen.push($(i).val());\n      });\n      self.form.value = licensesChosen; \n    });\n  });\n}\n\nfunction attachDatepicker(el, type) {\n  let self = this;\n  self.$nextTick(() => {\n    $(el).datepicker({dateFormat: 'dd M yy', changeYear: true}).on('change', function (ev) {\n      let date = ev.target.value;\n      if (!type) {\n        self.form.value = date;\n      } else {\n        self.form.value[type] = date;\n      }\n    });\n  });\n}\n\nfunction getFileName(link) {\n  if (!link) {\n    return '';\n  } else if (link.includes('http')) {\n    return link.substring(link.lastIndexOf('/') + 1);\n  } else {\n    return link;\n  }\n}\n\nfunction downloadURI(uri) {\n  this.downloadName = this.getFileName(uri);\n  this.downloadModal = true;\n  if (!uri) return;\n  let link = document.createElement(\"a\");\n  link.href = uri;\n  link.download = this.getFileName(uri);\n  link.target = \"_blank\";\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n\nfunction add(file, component) {\n  let self = this;\n  self.form = new window.FormData();\n  for (var key in file.data) {\n    if (typeof file.data[key] != 'string') {\n      self.form.append(key, JSON.stringify(file.data[key]));\n    } else {\n      self.form.append(key, file.data[key]);\n    }\n  }\n  self.form.append('file', file.file);\n  self.$parent.loading = true;\n  self.$http.post('/subscriptions/upload-html', self.form).then(resp => {\n    self.$parent.form.value = resp.body;\n    self.$parent.loading = false;\n    self.$parent.$forceUpdate();\n  }).catch(err => {\n    self.$parent.loading = false;\n    self.$parent.$parent.msg = 'Error uploading file'\n  })\n}\n\n</script>"]}]}